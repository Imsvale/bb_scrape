Brutalball Scraper — CLI

USAGE
  ./cli                           Scrape all players & export to out/players/all.csv
  ./cli [OPTIONS]                 Scrape & export with options
  ./cli --h                       Show this help
  ./cli --list-teams              Print all team ids/names and exit

PAGES
  -p, --page players              Which page to scrape (default: players)

TEAM SELECTION (0–31)
  -t, --team <id>                 Add a team id (repeatable)
  -i, --ids <list>                Comma/range list (e.g. 0,2,5-7)
                                  Ranges must be low to high; values outside 0-31 are ignored
                                  -t and --ids can be combined

EXPORT
  -f, --format [csv|tsv]          Output format (default: csv)
  -x, --drop-headers              Drop the header row
  -#, --nohash                    Remove the '#' from player numbers
  -m, --multi, --per-team         Each team in a separate file, named <Team_Name>.extension
  -o, --out <path>                Single-file: file name, or directory (with default file name)
                                  Per-team:   directory
                                  Anything with a trailing slash (…/ or …\) is treated as a directory.

MISC
  -l, --list-teams                Output "id  team" for all teams and exit
  -h, --help                      This help

NOTES
  • Defaults:
      format: CSV
      single-file: out/players/all.csv
      per-team directory: out/players/<Team_Name>.extension
      scraper behavior: all teams
      export behavior: single file

  In single-file mode:
    • "-o name" to specify filename only (uses default directory).
    • "-o dir/" to specify directory only (uses default filename).
    • "-o dir/subdir/" to specify subdirectory (uses default filename).
    • "-o dir/subdir/name" to specify all.
    • File extension is ignored. Use --format to set.

  In multi-file mode:
    • File names are the team names.
    • "-o dir" to specify directory.
    • "-o dir/subdir" to specify subdirectory.

EXAMPLES
  # All players to a single file hello.csv in default directory
  cli -o hello

  # Single team (id 3), single file (default, CSV)
  cli -t 3

  # Two teams via repeated -t, per-team directory
  cli -t 1 -t 2 --per-team -o out/players/per

  # Range + singles via --ids, --multi (same as --per-team)
  cli --ids 0-5,7,24 --multi -o out/players/range

  # TSV without headers and '#', single file at custom path → hello.tsv
  cli --format tsv --drop-headers --nohash -o out/custom/hello

  
