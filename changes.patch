diff --git a/src/gui.rs b/src/gui.rs
index 1111111..2222222 100644
--- a/src/gui.rs
+++ b/src/gui.rs
@@ -72,7 +72,8 @@ pub struct App {
     include_headers: bool,
     keep_hash: bool,
     per_team: bool,
-    fmt: UiFormat,
+    fmt: UiFormat,                 // UI field
+    delim: Delim,                  // backing value for Params
 
     // output path text (for Export)
     out_path: String,
@@ -139,6 +140,7 @@ impl Default for App {
             keep_hash: false,
             per_team: false,
             fmt: UiFormat::Csv,
+            delim: Delim::Csv,
 
             out_path: format!("{}/{}", DEFAULT_OUT_DIR, DEFAULT_MERGED_FILENAME),
 
@@ -207,6 +209,7 @@ impl App {
             keep_hash: self.keep_hash,
             include_headers: self.include_headers,
             list_teams: false,
+            delim: self.delim,
             ids_filter: None,
             per_team: self.per_team, // export concern; harmless here
         };
@@ -250,6 +253,7 @@ impl App {
             keep_hash: self.keep_hash,
             include_headers: self.include_headers,
             list_teams: false,
+            delim: self.delim,
             ids_filter: None,
             per_team: self.per_team,
         };
@@ -276,6 +280,11 @@ impl App {
     fn current_delim(&self) -> Delim {
         match self.fmt { UiFormat::Csv => Delim::Csv, UiFormat::Tsv => Delim::Tsv }
     }
+
+    fn update_delim(&mut self) {
+        self.delim = match self.fmt {
+            UiFormat::Csv => Delim::Csv, UiFormat::Tsv => Delim::Tsv
+        };
+    }
 }
 
 impl eframe::App for App {
@@ -457,6 +466,7 @@ impl eframe::App for App {
                 ui.selectable_value(&mut self.fmt, UiFormat::Csv, "CSV");
                 ui.selectable_value(&mut self.fmt, UiFormat::Tsv, "TSV");
             });
+            self.update_delim();
 
             ui.separator();
 
@@ -478,6 +488,7 @@ impl eframe::App for App {
                             page: self.page, all: true, one_team: None, out: Some(PathBuf::from(&self.out_path)),
                             keep_hash: self.keep_hash, include_headers: self.include_headers, list_teams: false,
-                            ids_filter: if self.selected.is_empty() { None } else { Some(self.selected.clone()) },
+                            delim: self.delim, ids_filter: if self.selected.is_empty() { None } else { Some(self.selected.clone()) },
                             per_team: true,
                         };
                         runner::run(&p, None)
